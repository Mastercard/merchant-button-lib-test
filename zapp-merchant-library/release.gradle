// ./gradlew clean build :zapp-merchant-library:generateLibraryRelease
apply plugin: 'maven'
apply plugin: 'maven-publish'

def localReleaseDest = "${buildDir}/release/${version}"

task javadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

afterEvaluate {
    javadocs.classpath += files(android.libraryVariants.collect { variant ->
        //noinspection GroovyUntypedAccess
        //variant.javaCompile.classpath.files
        variant.javaCompileProvider.get().classpath.files
    })
}

task javadocsJar(type: Jar, dependsOn: javadocs) {
    classifier = 'javadoc'
    from javadocs.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

uploadArchives {
    repositories.mavenDeployer {
        pom.groupId = project.PUBLISH_GROUP_ID
        pom.artifactId = project.PUBLISH_ARTIFACT_ID
        pom.version = project.PUBLISH_VERSION
        // Add other pom properties here if you want (developer details / licenses)
        repository(url: "file://${localReleaseDest}")
    }
}

task zipRelease(type: Zip) {
    from localReleaseDest
    destinationDir buildDir
    archiveName "release-${project.PUBLISH_VERSION}.zip"
}

task generateLibraryRelease {
    doLast {
        println "Release ${project.PUBLISH_VERSION} can be found at ${localReleaseDest}/"
        println "Release ${project.PUBLISH_VERSION} zipped can be found ${buildDir}/release-${project.PUBLISH_VERSION}.zip"
    }
}

generateLibraryRelease.dependsOn(uploadArchives)
generateLibraryRelease.dependsOn(zipRelease)

artifacts {
    archives sourcesJar
    archives javadocsJar
}

publishing {
    publications {
        library(MavenPublication) {
            groupId project.PUBLISH_GROUP_ID
            artifactId project.PUBLISH_ARTIFACT_ID
            version project.PUBLISH_VERSION
            artifact("artifact/release-3.1.2.zip")
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            /** Configure path of your package repository on Github
             ** Replace GITHUB_USERID with your/organisation Github userID
             ** and REPOSITORY with the repository name on GitHub
             */
            url = uri("https://maven.pkg.github.com/Mastercard/merchant-button-lib-test")
            credentials {
                /** Create github.properties in root project folder file with
                 ** gpr.usr=GITHUB_USER_ID & gpr.key=PERSONAL_ACCESS_TOKEN
                 ** Set env variable GPR_USER & GPR_API_KEY if not adding a properties file**/

                username = System.getenv("USERNAME")
                password = System.getenv("TOKEN")
            }
        }
    }
}